---
apiVersion: v1
kind: Service
metadata:
  name: bus-chart
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  selector:
    app: bus-chart
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bus-chart
spec:
  selector:
    matchLabels:
      app: bus-chart
  replicas: {{ bus_chart_replicas }}
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: bus-chart
        app: bus-chart
        vector.dev/enable: "true"
    spec:
      containers:
        - name: bus-chart
          image: "registry.cn-hongkong.aliyuncs.com/36node/bus-chart:{{ bus_chart_version }}"
          env:
            - name: MANUAL_UPDATE
              value: "20210321"
            - name: PORT
              value: "3000"
            - name: BASE
              value: /chart/v0
            - name: MONGODB_CONNECTION
              value: "{{ bus_chart_mongodb }}"
            - name: KAFKA_BROKER_LIST
              value: "{{ kafka_bootstrap_server }}"
            - name: KAFKA_GROUP_ID
              value: "{{ namespace }}-bus-chart-consumer"
            - name: KAFKA_EVENT_TOPIC
              value: "{{ bus_event_topic }}"
            - name: ES_HOST
              value: "{{ elasticsearch_endpoint }}"
            - name: ES_INDEX_SUFFIX
              value: "{{ bus_chart_es_index_suffix }}"
            - name: ES_INDEX_TBOX_LOGDASH_INDEX
              value: "{{ bus_tbox_es_index }}"
            - name: bus_core_endpoint
              value: "{{ bus_core_endpoint }}"
            - name: BUS_CORE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: bus-auth
                  key: auth_token
            - name: bus_op_endpoint
              value: "{{ bus_op_endpoint }}"
            - name: BUS_OP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: bus-auth
                  key: auth_token
            - name: AUTH_BASE
              value: "{{ bus_auth_endpoint }}"
            - name: AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: bus-auth
                  key: auth_token
            - name: LOG_LEVEL
              value: info
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
